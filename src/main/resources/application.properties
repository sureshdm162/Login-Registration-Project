spring.application.name=UserServiceApplication
server.port=8080

#Log Matched Rules in SecurityConfig (for Debugging)
logging.level.org.springframework.security=DEBUG

#spring.datasource.url=jdbc:mysql://localhost:3306/credit_score_db
spring.datasource.url=${DB_URL}
spring.datasource.password=root

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#-------Java Mail Sender configuration-------

#SMTP server to send email via Gmail.
spring.mail.host=#Use smtp server

#Port 587 is used for TLS (Transport Layer Security), which encrypts your email.
spring.mail.port=#Use the above port number

#The email address you are sending from.
spring.mail.username=#Write your personal email address

#This is NOT your Gmail password.
#Instead, you must use an App Password, which is a 16-digit passcode generated from your Google account.
#If you have 2-Step Verification enabled (which you should), Gmail doesn't allow you to use your real password.

spring.mail.password=#Write your 16 digit passcode here

#Enables SMTP authentication (you must log in to send mail).
spring.mail.properties.mail.smtp.auth=true

#
spring.mail.properties.mail.smtp.starttls.enable=true

#This allows you to access all metrics about actuator like CPU usage, server health status, Http Trace etc.
management.endpoints.web.exposure.include=*

